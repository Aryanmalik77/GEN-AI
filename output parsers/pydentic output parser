from langchain_huggingface import ChatHuggingFace,HuggingFaceEndpoint
from dotenv import load_dotenv
from langchain_core.prompts import PromptTemplate
from langchain_core.output_parsers import PydanticOutputParser
from pydentic import BaseModel,Feild


import os
load_dotenv()
hf_token = os.getenv("HUGGINGFACEHUB_API_TOKEN")

llm = HuggingFaceEndpoint(
    repo_id = "HuggingFaceH4/zephyr-7b-beta",
    task = "text-generation",
    huggingfacehub_api_token = ""

)
model = ChatHuggingFace(llm = llm)
class person(BaseModel):
    name :str = Field(description="The person's name")
    age : int = Field(gt = 18, description = "The person's age")
    city : str = Field(description = "The person's city")
parser = PydanticOutputParser()
template = PromptTemplate(
    template = "generate the name,city and age of the {palce} person./n (format_instructions)",
    input_variables =["palce"],
    partial_variables= {"format_instruction":parser.get_format_instructions()}


)
prompt = template.invoke({"place":"India"})
result = model.invoke(prompt)
final_result = parser.parse(result.content)
print(final_result)
